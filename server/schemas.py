"""Pydantic models for the backend HTTP API."""

from __future__ import annotations

from typing import List, Literal, Sequence

from pydantic import BaseModel, Field


class ChatTurn(BaseModel):
    """Single turn exchanged between the player and an NPC."""

    role: Literal["user", "assistant"]
    content: str = Field(..., min_length=1)


class ChatRequest(BaseModel):
    """Payload that kicks off an LLM completion."""

    npc_id: str = Field(..., description="Identifier of the NPC to converse with.")
    message: str = Field(..., description="Player's latest utterance.", min_length=1)
    history: Sequence[ChatTurn] = Field(
        default_factory=list,
        description="Prior conversation turns in chronological order.",
    )


class ChatResponse(BaseModel):
    """Response payload returned to the front-end."""

    reply: str = Field(..., description="NPC response generated by the LLM.")
    npc_id: str
    history: List[ChatTurn]


__all__ = ["ChatTurn", "ChatRequest", "ChatResponse"]
